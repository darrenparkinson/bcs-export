// Copyright 2021 The go-planhat AUTHORS. All rights reserved.
//
// Use of this source code is governed by an MIT-style
// license that can be found in the LICENSE file.
// Code generated by gen-accessors; DO NOT EDIT.
package ciscobcs

import "testing"

func TestAsset_GetChassisName(tt *testing.T) {
	var zeroValue string
	a := &Asset{ChassisName: &zeroValue}
	a.GetChassisName()
	a = &Asset{}
	a.GetChassisName()
	a = nil
	a.GetChassisName()
}

func TestAsset_GetDeviceId(tt *testing.T) {
	var zeroValue int
	a := &Asset{DeviceId: &zeroValue}
	a.GetDeviceId()
	a = &Asset{}
	a.GetDeviceId()
	a = nil
	a.GetDeviceId()
}

func TestAsset_GetDeviceName(tt *testing.T) {
	var zeroValue string
	a := &Asset{DeviceName: &zeroValue}
	a.GetDeviceName()
	a = &Asset{}
	a.GetDeviceName()
	a = nil
	a.GetDeviceName()
}

func TestAsset_GetHwRev(tt *testing.T) {
	var zeroValue string
	a := &Asset{HwRev: &zeroValue}
	a.GetHwRev()
	a = &Asset{}
	a.GetHwRev()
	a = nil
	a.GetHwRev()
}

func TestAsset_GetInstalledFlash(tt *testing.T) {
	var zeroValue int
	a := &Asset{InstalledFlash: &zeroValue}
	a.GetInstalledFlash()
	a = &Asset{}
	a.GetInstalledFlash()
	a = nil
	a.GetInstalledFlash()
}

func TestAsset_GetInstalledMemory(tt *testing.T) {
	var zeroValue int
	a := &Asset{InstalledMemory: &zeroValue}
	a.GetInstalledMemory()
	a = &Asset{}
	a.GetInstalledMemory()
	a = nil
	a.GetInstalledMemory()
}

func TestAsset_GetPcb(tt *testing.T) {
	var zeroValue string
	a := &Asset{Pcb: &zeroValue}
	a.GetPcb()
	a = &Asset{}
	a.GetPcb()
	a = nil
	a.GetPcb()
}

func TestAsset_GetPcbRev(tt *testing.T) {
	var zeroValue string
	a := &Asset{PcbRev: &zeroValue}
	a.GetPcbRev()
	a = &Asset{}
	a.GetPcbRev()
	a = nil
	a.GetPcbRev()
}

func TestAsset_GetPhysicalElementId(tt *testing.T) {
	var zeroValue int
	a := &Asset{PhysicalElementId: &zeroValue}
	a.GetPhysicalElementId()
	a = &Asset{}
	a.GetPhysicalElementId()
	a = nil
	a.GetPhysicalElementId()
}

func TestAsset_GetPhysicalSubtype(tt *testing.T) {
	var zeroValue string
	a := &Asset{PhysicalSubtype: &zeroValue}
	a.GetPhysicalSubtype()
	a = &Asset{}
	a.GetPhysicalSubtype()
	a = nil
	a.GetPhysicalSubtype()
}

func TestAsset_GetPhysicalType(tt *testing.T) {
	var zeroValue string
	a := &Asset{PhysicalType: &zeroValue}
	a.GetPhysicalType()
	a = &Asset{}
	a.GetPhysicalType()
	a = nil
	a.GetPhysicalType()
}

func TestAsset_GetProductFamily(tt *testing.T) {
	var zeroValue string
	a := &Asset{ProductFamily: &zeroValue}
	a.GetProductFamily()
	a = &Asset{}
	a.GetProductFamily()
	a = nil
	a.GetProductFamily()
}

func TestAsset_GetProductId(tt *testing.T) {
	var zeroValue string
	a := &Asset{ProductId: &zeroValue}
	a.GetProductId()
	a = &Asset{}
	a.GetProductId()
	a = nil
	a.GetProductId()
}

func TestAsset_GetProductType(tt *testing.T) {
	var zeroValue string
	a := &Asset{ProductType: &zeroValue}
	a.GetProductType()
	a = &Asset{}
	a.GetProductType()
	a = nil
	a.GetProductType()
}

func TestAsset_GetSerialNumber(tt *testing.T) {
	var zeroValue string
	a := &Asset{SerialNumber: &zeroValue}
	a.GetSerialNumber()
	a = &Asset{}
	a.GetSerialNumber()
	a = nil
	a.GetSerialNumber()
}

func TestAsset_GetSerialNumberStatus(tt *testing.T) {
	var zeroValue string
	a := &Asset{SerialNumberStatus: &zeroValue}
	a.GetSerialNumberStatus()
	a = &Asset{}
	a.GetSerialNumberStatus()
	a = nil
	a.GetSerialNumberStatus()
}

func TestAsset_GetSlot(tt *testing.T) {
	var zeroValue string
	a := &Asset{Slot: &zeroValue}
	a.GetSlot()
	a = &Asset{}
	a.GetSlot()
	a = nil
	a.GetSlot()
}

func TestAsset_GetSwVersion(tt *testing.T) {
	var zeroValue string
	a := &Asset{SwVersion: &zeroValue}
	a.GetSwVersion()
	a = &Asset{}
	a.GetSwVersion()
	a = nil
	a.GetSwVersion()
}

func TestAsset_GetTan(tt *testing.T) {
	var zeroValue string
	a := &Asset{Tan: &zeroValue}
	a.GetTan()
	a = &Asset{}
	a.GetTan()
	a = nil
	a.GetTan()
}

func TestAsset_GetTanRev(tt *testing.T) {
	var zeroValue string
	a := &Asset{TanRev: &zeroValue}
	a.GetTanRev()
	a = &Asset{}
	a.GetTanRev()
	a = nil
	a.GetTanRev()
}

func TestCBPDetail_GetBpNuggetId(tt *testing.T) {
	var zeroValue int
	c := &CBPDetail{BpNuggetId: &zeroValue}
	c.GetBpNuggetId()
	c = &CBPDetail{}
	c.GetBpNuggetId()
	c = nil
	c.GetBpNuggetId()
}

func TestCBPDetail_GetBpRuleId(tt *testing.T) {
	var zeroValue int
	c := &CBPDetail{BpRuleId: &zeroValue}
	c.GetBpRuleId()
	c = &CBPDetail{}
	c.GetBpRuleId()
	c = nil
	c.GetBpRuleId()
}

func TestCBPDetail_GetConfigSource(tt *testing.T) {
	var zeroValue string
	c := &CBPDetail{ConfigSource: &zeroValue}
	c.GetConfigSource()
	c = &CBPDetail{}
	c.GetConfigSource()
	c = nil
	c.GetConfigSource()
}

func TestCBPDetail_GetDeviceId(tt *testing.T) {
	var zeroValue int
	c := &CBPDetail{DeviceId: &zeroValue}
	c.GetDeviceId()
	c = &CBPDetail{}
	c.GetDeviceId()
	c = nil
	c.GetDeviceId()
}

func TestCBPRule_GetBpCaveat(tt *testing.T) {
	var zeroValue string
	c := &CBPRule{BpCaveat: &zeroValue}
	c.GetBpCaveat()
	c = &CBPRule{}
	c.GetBpCaveat()
	c = nil
	c.GetBpCaveat()
}

func TestCBPRule_GetBpCorrectiveAction(tt *testing.T) {
	var zeroValue string
	c := &CBPRule{BpCorrectiveAction: &zeroValue}
	c.GetBpCorrectiveAction()
	c = &CBPRule{}
	c.GetBpCorrectiveAction()
	c = nil
	c.GetBpCorrectiveAction()
}

func TestCBPRule_GetBpDescription(tt *testing.T) {
	var zeroValue string
	c := &CBPRule{BpDescription: &zeroValue}
	c.GetBpDescription()
	c = &CBPRule{}
	c.GetBpDescription()
	c = nil
	c.GetBpDescription()
}

func TestCBPRule_GetBpNuggetId(tt *testing.T) {
	var zeroValue int
	c := &CBPRule{BpNuggetId: &zeroValue}
	c.GetBpNuggetId()
	c = &CBPRule{}
	c.GetBpNuggetId()
	c = nil
	c.GetBpNuggetId()
}

func TestCBPRule_GetBpPrimaryTechnology(tt *testing.T) {
	var zeroValue string
	c := &CBPRule{BpPrimaryTechnology: &zeroValue}
	c.GetBpPrimaryTechnology()
	c = &CBPRule{}
	c.GetBpPrimaryTechnology()
	c = nil
	c.GetBpPrimaryTechnology()
}

func TestCBPRule_GetBpRecommendation(tt *testing.T) {
	var zeroValue string
	c := &CBPRule{BpRecommendation: &zeroValue}
	c.GetBpRecommendation()
	c = &CBPRule{}
	c.GetBpRecommendation()
	c = nil
	c.GetBpRecommendation()
}

func TestCBPRule_GetBpRisk(tt *testing.T) {
	var zeroValue string
	c := &CBPRule{BpRisk: &zeroValue}
	c.GetBpRisk()
	c = &CBPRule{}
	c.GetBpRisk()
	c = nil
	c.GetBpRisk()
}

func TestCBPRule_GetBpRuleId(tt *testing.T) {
	var zeroValue int
	c := &CBPRule{BpRuleId: &zeroValue}
	c.GetBpRuleId()
	c = &CBPRule{}
	c.GetBpRuleId()
	c = nil
	c.GetBpRuleId()
}

func TestCBPRule_GetBpSecondaryTechnology(tt *testing.T) {
	var zeroValue string
	c := &CBPRule{BpSecondaryTechnology: &zeroValue}
	c.GetBpSecondaryTechnology()
	c = &CBPRule{}
	c.GetBpSecondaryTechnology()
	c = nil
	c.GetBpSecondaryTechnology()
}

func TestCBPRule_GetBpTitle(tt *testing.T) {
	var zeroValue string
	c := &CBPRule{BpTitle: &zeroValue}
	c.GetBpTitle()
	c = &CBPRule{}
	c.GetBpTitle()
	c = nil
	c.GetBpTitle()
}

func TestCBPRule_GetCreateDate(tt *testing.T) {
	c := &CBPRule{}
	c.GetCreateDate()
	c = nil
	c.GetCreateDate()
}

func TestCBPRule_GetSwType(tt *testing.T) {
	var zeroValue string
	c := &CBPRule{SwType: &zeroValue}
	c.GetSwType()
	c = &CBPRule{}
	c.GetSwType()
	c = nil
	c.GetSwType()
}

func TestCBPRule_GetUpdateDate(tt *testing.T) {
	c := &CBPRule{}
	c.GetUpdateDate()
	c = nil
	c.GetUpdateDate()
}

func TestCBPRulesReference_GetBpRuleId(tt *testing.T) {
	var zeroValue int
	c := &CBPRulesReference{BpRuleId: &zeroValue}
	c.GetBpRuleId()
	c = &CBPRulesReference{}
	c.GetBpRuleId()
	c = nil
	c.GetBpRuleId()
}

func TestCBPRulesReference_GetBpUrl(tt *testing.T) {
	var zeroValue string
	c := &CBPRulesReference{BpUrl: &zeroValue}
	c.GetBpUrl()
	c = &CBPRulesReference{}
	c.GetBpUrl()
	c = nil
	c.GetBpUrl()
}

func TestCBPRulesReference_GetBpUrlTitle(tt *testing.T) {
	var zeroValue string
	c := &CBPRulesReference{BpUrlTitle: &zeroValue}
	c.GetBpUrlTitle()
	c = &CBPRulesReference{}
	c.GetBpUrlTitle()
	c = nil
	c.GetBpUrlTitle()
}

func TestCBPSummary_GetBpNuggetId(tt *testing.T) {
	var zeroValue int
	c := &CBPSummary{BpNuggetId: &zeroValue}
	c.GetBpNuggetId()
	c = &CBPSummary{}
	c.GetBpNuggetId()
	c = nil
	c.GetBpNuggetId()
}

func TestCBPSummary_GetBpPrimaryTechnology(tt *testing.T) {
	var zeroValue string
	c := &CBPSummary{BpPrimaryTechnology: &zeroValue}
	c.GetBpPrimaryTechnology()
	c = &CBPSummary{}
	c.GetBpPrimaryTechnology()
	c = nil
	c.GetBpPrimaryTechnology()
}

func TestCBPSummary_GetBpRisk(tt *testing.T) {
	var zeroValue string
	c := &CBPSummary{BpRisk: &zeroValue}
	c.GetBpRisk()
	c = &CBPSummary{}
	c.GetBpRisk()
	c = nil
	c.GetBpRisk()
}

func TestCBPSummary_GetBpRuleId(tt *testing.T) {
	var zeroValue int
	c := &CBPSummary{BpRuleId: &zeroValue}
	c.GetBpRuleId()
	c = &CBPSummary{}
	c.GetBpRuleId()
	c = nil
	c.GetBpRuleId()
}

func TestCBPSummary_GetBpSecondaryTechnology(tt *testing.T) {
	var zeroValue string
	c := &CBPSummary{BpSecondaryTechnology: &zeroValue}
	c.GetBpSecondaryTechnology()
	c = &CBPSummary{}
	c.GetBpSecondaryTechnology()
	c = nil
	c.GetBpSecondaryTechnology()
}

func TestCBPSummary_GetBpTitle(tt *testing.T) {
	var zeroValue string
	c := &CBPSummary{BpTitle: &zeroValue}
	c.GetBpTitle()
	c = &CBPSummary{}
	c.GetBpTitle()
	c = nil
	c.GetBpTitle()
}

func TestCBPSummary_GetSwType(tt *testing.T) {
	var zeroValue string
	c := &CBPSummary{SwType: &zeroValue}
	c.GetSwType()
	c = &CBPSummary{}
	c.GetSwType()
	c = nil
	c.GetSwType()
}

func TestCBPSummary_GetTotalDevices(tt *testing.T) {
	var zeroValue int
	c := &CBPSummary{TotalDevices: &zeroValue}
	c.GetTotalDevices()
	c = &CBPSummary{}
	c.GetTotalDevices()
	c = nil
	c.GetTotalDevices()
}

func TestContractBasePID_GetBasePid(tt *testing.T) {
	var zeroValue string
	c := &ContractBasePID{BasePid: &zeroValue}
	c.GetBasePid()
	c = &ContractBasePID{}
	c.GetBasePid()
	c = nil
	c.GetBasePid()
}

func TestDevice_GetCollector(tt *testing.T) {
	var zeroValue string
	d := &Device{Collector: &zeroValue}
	d.GetCollector()
	d = &Device{}
	d.GetCollector()
	d = nil
	d.GetCollector()
}

func TestDevice_GetConfigRegister(tt *testing.T) {
	var zeroValue string
	d := &Device{ConfigRegister: &zeroValue}
	d.GetConfigRegister()
	d = &Device{}
	d.GetConfigRegister()
	d = nil
	d.GetConfigRegister()
}

func TestDevice_GetConfigStatus(tt *testing.T) {
	var zeroValue string
	d := &Device{ConfigStatus: &zeroValue}
	d.GetConfigStatus()
	d = &Device{}
	d.GetConfigStatus()
	d = nil
	d.GetConfigStatus()
}

func TestDevice_GetConfigTime(tt *testing.T) {
	d := &Device{}
	d.GetConfigTime()
	d = nil
	d.GetConfigTime()
}

func TestDevice_GetCreateDate(tt *testing.T) {
	d := &Device{}
	d.GetCreateDate()
	d = nil
	d.GetCreateDate()
}

func TestDevice_GetDeviceId(tt *testing.T) {
	var zeroValue int
	d := &Device{DeviceId: &zeroValue}
	d.GetDeviceId()
	d = &Device{}
	d.GetDeviceId()
	d = nil
	d.GetDeviceId()
}

func TestDevice_GetDeviceIp(tt *testing.T) {
	var zeroValue string
	d := &Device{DeviceIp: &zeroValue}
	d.GetDeviceIp()
	d = &Device{}
	d.GetDeviceIp()
	d = nil
	d.GetDeviceIp()
}

func TestDevice_GetDeviceName(tt *testing.T) {
	var zeroValue string
	d := &Device{DeviceName: &zeroValue}
	d.GetDeviceName()
	d = &Device{}
	d.GetDeviceName()
	d = nil
	d.GetDeviceName()
}

func TestDevice_GetDeviceStatus(tt *testing.T) {
	var zeroValue string
	d := &Device{DeviceStatus: &zeroValue}
	d.GetDeviceStatus()
	d = &Device{}
	d.GetDeviceStatus()
	d = nil
	d.GetDeviceStatus()
}

func TestDevice_GetDeviceSysName(tt *testing.T) {
	var zeroValue string
	d := &Device{DeviceSysName: &zeroValue}
	d.GetDeviceSysName()
	d = &Device{}
	d.GetDeviceSysName()
	d = nil
	d.GetDeviceSysName()
}

func TestDevice_GetDeviceType(tt *testing.T) {
	var zeroValue string
	d := &Device{DeviceType: &zeroValue}
	d.GetDeviceType()
	d = &Device{}
	d.GetDeviceType()
	d = nil
	d.GetDeviceType()
}

func TestDevice_GetFeatureSetdesc(tt *testing.T) {
	var zeroValue string
	d := &Device{FeatureSetdesc: &zeroValue}
	d.GetFeatureSetdesc()
	d = &Device{}
	d.GetFeatureSetdesc()
	d = nil
	d.GetFeatureSetdesc()
}

func TestDevice_GetImageName(tt *testing.T) {
	var zeroValue string
	d := &Device{ImageName: &zeroValue}
	d.GetImageName()
	d = &Device{}
	d.GetImageName()
	d = nil
	d.GetImageName()
}

func TestDevice_GetInSeedFile(tt *testing.T) {
	var zeroValue bool
	d := &Device{InSeedFile: &zeroValue}
	d.GetInSeedFile()
	d = &Device{}
	d.GetInSeedFile()
	d = nil
	d.GetInSeedFile()
}

func TestDevice_GetInventoryStatus(tt *testing.T) {
	var zeroValue string
	d := &Device{InventoryStatus: &zeroValue}
	d.GetInventoryStatus()
	d = &Device{}
	d.GetInventoryStatus()
	d = nil
	d.GetInventoryStatus()
}

func TestDevice_GetInventoryTime(tt *testing.T) {
	d := &Device{}
	d.GetInventoryTime()
	d = nil
	d.GetInventoryTime()
}

func TestDevice_GetIpAddress(tt *testing.T) {
	var zeroValue string
	d := &Device{IpAddress: &zeroValue}
	d.GetIpAddress()
	d = &Device{}
	d.GetIpAddress()
	d = nil
	d.GetIpAddress()
}

func TestDevice_GetLastReset(tt *testing.T) {
	d := &Device{}
	d.GetLastReset()
	d = nil
	d.GetLastReset()
}

func TestDevice_GetProductFamily(tt *testing.T) {
	var zeroValue string
	d := &Device{ProductFamily: &zeroValue}
	d.GetProductFamily()
	d = &Device{}
	d.GetProductFamily()
	d = nil
	d.GetProductFamily()
}

func TestDevice_GetProductId(tt *testing.T) {
	var zeroValue string
	d := &Device{ProductId: &zeroValue}
	d.GetProductId()
	d = &Device{}
	d.GetProductId()
	d = nil
	d.GetProductId()
}

func TestDevice_GetProductType(tt *testing.T) {
	var zeroValue string
	d := &Device{ProductType: &zeroValue}
	d.GetProductType()
	d = &Device{}
	d.GetProductType()
	d = nil
	d.GetProductType()
}

func TestDevice_GetResetReason(tt *testing.T) {
	var zeroValue string
	d := &Device{ResetReason: &zeroValue}
	d.GetResetReason()
	d = &Device{}
	d.GetResetReason()
	d = nil
	d.GetResetReason()
}

func TestDevice_GetSwType(tt *testing.T) {
	var zeroValue string
	d := &Device{SwType: &zeroValue}
	d.GetSwType()
	d = &Device{}
	d.GetSwType()
	d = nil
	d.GetSwType()
}

func TestDevice_GetSwVersion(tt *testing.T) {
	var zeroValue string
	d := &Device{SwVersion: &zeroValue}
	d.GetSwVersion()
	d = &Device{}
	d.GetSwVersion()
	d = nil
	d.GetSwVersion()
}

func TestDevice_GetSysContact(tt *testing.T) {
	var zeroValue string
	d := &Device{SysContact: &zeroValue}
	d.GetSysContact()
	d = &Device{}
	d.GetSysContact()
	d = nil
	d.GetSysContact()
}

func TestDevice_GetSysDescription(tt *testing.T) {
	var zeroValue string
	d := &Device{SysDescription: &zeroValue}
	d.GetSysDescription()
	d = &Device{}
	d.GetSysDescription()
	d = nil
	d.GetSysDescription()
}

func TestDevice_GetSysLocation(tt *testing.T) {
	var zeroValue string
	d := &Device{SysLocation: &zeroValue}
	d.GetSysLocation()
	d = &Device{}
	d.GetSysLocation()
	d = nil
	d.GetSysLocation()
}

func TestDevice_GetSysObjectId(tt *testing.T) {
	var zeroValue string
	d := &Device{SysObjectId: &zeroValue}
	d.GetSysObjectId()
	d = &Device{}
	d.GetSysObjectId()
	d = nil
	d.GetSysObjectId()
}

func TestDevice_GetUserField1(tt *testing.T) {
	var zeroValue string
	d := &Device{UserField1: &zeroValue}
	d.GetUserField1()
	d = &Device{}
	d.GetUserField1()
	d = nil
	d.GetUserField1()
}

func TestDevice_GetUserField2(tt *testing.T) {
	var zeroValue string
	d := &Device{UserField2: &zeroValue}
	d.GetUserField2()
	d = &Device{}
	d.GetUserField2()
	d = nil
	d.GetUserField2()
}

func TestDevice_GetUserField3(tt *testing.T) {
	var zeroValue string
	d := &Device{UserField3: &zeroValue}
	d.GetUserField3()
	d = &Device{}
	d.GetUserField3()
	d = nil
	d.GetUserField3()
}

func TestDevice_GetUserField4(tt *testing.T) {
	var zeroValue string
	d := &Device{UserField4: &zeroValue}
	d.GetUserField4()
	d = &Device{}
	d.GetUserField4()
	d = nil
	d.GetUserField4()
}

func TestFieldNotice_GetDeviceId(tt *testing.T) {
	var zeroValue int
	f := &FieldNotice{DeviceId: &zeroValue}
	f.GetDeviceId()
	f = &FieldNotice{}
	f.GetDeviceId()
	f = nil
	f.GetDeviceId()
}

func TestFieldNotice_GetFieldNoticeId(tt *testing.T) {
	var zeroValue string
	f := &FieldNotice{FieldNoticeId: &zeroValue}
	f.GetFieldNoticeId()
	f = &FieldNotice{}
	f.GetFieldNoticeId()
	f = nil
	f.GetFieldNoticeId()
}

func TestFieldNotice_GetMatchConfidence(tt *testing.T) {
	var zeroValue string
	f := &FieldNotice{MatchConfidence: &zeroValue}
	f.GetMatchConfidence()
	f = &FieldNotice{}
	f.GetMatchConfidence()
	f = nil
	f.GetMatchConfidence()
}

func TestFieldNotice_GetMatchConfidenceReason(tt *testing.T) {
	var zeroValue string
	f := &FieldNotice{MatchConfidenceReason: &zeroValue}
	f.GetMatchConfidenceReason()
	f = &FieldNotice{}
	f.GetMatchConfidenceReason()
	f = nil
	f.GetMatchConfidenceReason()
}

func TestFieldNotice_GetPhysicalElementId(tt *testing.T) {
	var zeroValue int
	f := &FieldNotice{PhysicalElementId: &zeroValue}
	f.GetPhysicalElementId()
	f = &FieldNotice{}
	f.GetPhysicalElementId()
	f = nil
	f.GetPhysicalElementId()
}

func TestFieldNoticeNBulletin_GetBulletinFirstPublished(tt *testing.T) {
	var zeroValue string
	f := &FieldNoticeNBulletin{BulletinFirstPublished: &zeroValue}
	f.GetBulletinFirstPublished()
	f = &FieldNoticeNBulletin{}
	f.GetBulletinFirstPublished()
	f = nil
	f.GetBulletinFirstPublished()
}

func TestFieldNoticeNBulletin_GetBulletinLastUpdated(tt *testing.T) {
	f := &FieldNoticeNBulletin{}
	f.GetBulletinLastUpdated()
	f = nil
	f.GetBulletinLastUpdated()
}

func TestFieldNoticeNBulletin_GetBulletinMappingCaveat(tt *testing.T) {
	var zeroValue string
	f := &FieldNoticeNBulletin{BulletinMappingCaveat: &zeroValue}
	f.GetBulletinMappingCaveat()
	f = &FieldNoticeNBulletin{}
	f.GetBulletinMappingCaveat()
	f = nil
	f.GetBulletinMappingCaveat()
}

func TestFieldNoticeNBulletin_GetBulletinTitle(tt *testing.T) {
	var zeroValue string
	f := &FieldNoticeNBulletin{BulletinTitle: &zeroValue}
	f.GetBulletinTitle()
	f = &FieldNoticeNBulletin{}
	f.GetBulletinTitle()
	f = nil
	f.GetBulletinTitle()
}

func TestFieldNoticeNBulletin_GetBulletinUrl(tt *testing.T) {
	var zeroValue string
	f := &FieldNoticeNBulletin{BulletinUrl: &zeroValue}
	f.GetBulletinUrl()
	f = &FieldNoticeNBulletin{}
	f.GetBulletinUrl()
	f = nil
	f.GetBulletinUrl()
}

func TestFieldNoticeNBulletin_GetFieldNoticeId(tt *testing.T) {
	var zeroValue string
	f := &FieldNoticeNBulletin{FieldNoticeId: &zeroValue}
	f.GetFieldNoticeId()
	f = &FieldNoticeNBulletin{}
	f.GetFieldNoticeId()
	f = nil
	f.GetFieldNoticeId()
}

func TestFieldNoticeNBulletin_GetFnType(tt *testing.T) {
	var zeroValue string
	f := &FieldNoticeNBulletin{FnType: &zeroValue}
	f.GetFnType()
	f = &FieldNoticeNBulletin{}
	f.GetFnType()
	f = nil
	f.GetFnType()
}

func TestFieldNoticeNBulletin_GetProblemDescription(tt *testing.T) {
	var zeroValue string
	f := &FieldNoticeNBulletin{ProblemDescription: &zeroValue}
	f.GetProblemDescription()
	f = &FieldNoticeNBulletin{}
	f.GetProblemDescription()
	f = nil
	f.GetProblemDescription()
}

func TestHardwareEOX_GetCurrentEoxMilestone(tt *testing.T) {
	var zeroValue string
	h := &HardwareEOX{CurrentEoxMilestone: &zeroValue}
	h.GetCurrentEoxMilestone()
	h = &HardwareEOX{}
	h.GetCurrentEoxMilestone()
	h = nil
	h.GetCurrentEoxMilestone()
}

func TestHardwareEOX_GetCurrentEoxMilestoneDate(tt *testing.T) {
	h := &HardwareEOX{}
	h.GetCurrentEoxMilestoneDate()
	h = nil
	h.GetCurrentEoxMilestoneDate()
}

func TestHardwareEOX_GetDeviceId(tt *testing.T) {
	var zeroValue int
	h := &HardwareEOX{DeviceId: &zeroValue}
	h.GetDeviceId()
	h = &HardwareEOX{}
	h.GetDeviceId()
	h = nil
	h.GetDeviceId()
}

func TestHardwareEOX_GetDeviceName(tt *testing.T) {
	var zeroValue string
	h := &HardwareEOX{DeviceName: &zeroValue}
	h.GetDeviceName()
	h = &HardwareEOX{}
	h.GetDeviceName()
	h = nil
	h.GetDeviceName()
}

func TestHardwareEOX_GetHwEoxId(tt *testing.T) {
	var zeroValue int
	h := &HardwareEOX{HwEoxId: &zeroValue}
	h.GetHwEoxId()
	h = &HardwareEOX{}
	h.GetHwEoxId()
	h = nil
	h.GetHwEoxId()
}

func TestHardwareEOX_GetNextEoxMilestone(tt *testing.T) {
	var zeroValue string
	h := &HardwareEOX{NextEoxMilestone: &zeroValue}
	h.GetNextEoxMilestone()
	h = &HardwareEOX{}
	h.GetNextEoxMilestone()
	h = nil
	h.GetNextEoxMilestone()
}

func TestHardwareEOX_GetNextEoxMilestoneDate(tt *testing.T) {
	h := &HardwareEOX{}
	h.GetNextEoxMilestoneDate()
	h = nil
	h.GetNextEoxMilestoneDate()
}

func TestHardwareEOX_GetPhysicalElementId(tt *testing.T) {
	var zeroValue int
	h := &HardwareEOX{PhysicalElementId: &zeroValue}
	h.GetPhysicalElementId()
	h = &HardwareEOX{}
	h.GetPhysicalElementId()
	h = nil
	h.GetPhysicalElementId()
}

func TestHardwareEOX_GetPhysicalType(tt *testing.T) {
	var zeroValue string
	h := &HardwareEOX{PhysicalType: &zeroValue}
	h.GetPhysicalType()
	h = &HardwareEOX{}
	h.GetPhysicalType()
	h = nil
	h.GetPhysicalType()
}

func TestHardwareEOX_GetProductId(tt *testing.T) {
	var zeroValue string
	h := &HardwareEOX{ProductId: &zeroValue}
	h.GetProductId()
	h = &HardwareEOX{}
	h.GetProductId()
	h = nil
	h.GetProductId()
}

func TestHardwareEOXBulletin_GetBulletinNumber(tt *testing.T) {
	var zeroValue string
	h := &HardwareEOXBulletin{BulletinNumber: &zeroValue}
	h.GetBulletinNumber()
	h = &HardwareEOXBulletin{}
	h.GetBulletinNumber()
	h = nil
	h.GetBulletinNumber()
}

func TestHardwareEOXBulletin_GetBulletinTitle(tt *testing.T) {
	var zeroValue string
	h := &HardwareEOXBulletin{BulletinTitle: &zeroValue}
	h.GetBulletinTitle()
	h = &HardwareEOXBulletin{}
	h.GetBulletinTitle()
	h = nil
	h.GetBulletinTitle()
}

func TestHardwareEOXBulletin_GetBulletinUrl(tt *testing.T) {
	var zeroValue string
	h := &HardwareEOXBulletin{BulletinUrl: &zeroValue}
	h.GetBulletinUrl()
	h = &HardwareEOXBulletin{}
	h.GetBulletinUrl()
	h = nil
	h.GetBulletinUrl()
}

func TestHardwareEOXBulletin_GetEoLifeAnnouncementDate(tt *testing.T) {
	h := &HardwareEOXBulletin{}
	h.GetEoLifeAnnouncementDate()
	h = nil
	h.GetEoLifeAnnouncementDate()
}

func TestHardwareEOXBulletin_GetEoNewServiceAttachDate(tt *testing.T) {
	h := &HardwareEOXBulletin{}
	h.GetEoNewServiceAttachDate()
	h = nil
	h.GetEoNewServiceAttachDate()
}

func TestHardwareEOXBulletin_GetEoRoutineFailureAnalysisDate(tt *testing.T) {
	h := &HardwareEOXBulletin{}
	h.GetEoRoutineFailureAnalysisDate()
	h = nil
	h.GetEoRoutineFailureAnalysisDate()
}

func TestHardwareEOXBulletin_GetEoSaleDate(tt *testing.T) {
	h := &HardwareEOXBulletin{}
	h.GetEoSaleDate()
	h = nil
	h.GetEoSaleDate()
}

func TestHardwareEOXBulletin_GetEoSecurityVulSupportDate(tt *testing.T) {
	h := &HardwareEOXBulletin{}
	h.GetEoSecurityVulSupportDate()
	h = nil
	h.GetEoSecurityVulSupportDate()
}

func TestHardwareEOXBulletin_GetEoSoftwareContractRenewalDate(tt *testing.T) {
	h := &HardwareEOXBulletin{}
	h.GetEoSoftwareContractRenewalDate()
	h = nil
	h.GetEoSoftwareContractRenewalDate()
}

func TestHardwareEOXBulletin_GetEoSwMaintenanceReleasesDate(tt *testing.T) {
	h := &HardwareEOXBulletin{}
	h.GetEoSwMaintenanceReleasesDate()
	h = nil
	h.GetEoSwMaintenanceReleasesDate()
}

func TestHardwareEOXBulletin_GetHwEoxId(tt *testing.T) {
	var zeroValue int
	h := &HardwareEOXBulletin{HwEoxId: &zeroValue}
	h.GetHwEoxId()
	h = &HardwareEOXBulletin{}
	h.GetHwEoxId()
	h = nil
	h.GetHwEoxId()
}

func TestHardwareEOXBulletin_GetLastDateOfSupport(tt *testing.T) {
	h := &HardwareEOXBulletin{}
	h.GetLastDateOfSupport()
	h = nil
	h.GetLastDateOfSupport()
}

func TestHardwareEOXBulletin_GetLastShipDate(tt *testing.T) {
	h := &HardwareEOXBulletin{}
	h.GetLastShipDate()
	h = nil
	h.GetLastShipDate()
}

func TestHardwareEOXBulletin_GetProductId(tt *testing.T) {
	var zeroValue string
	h := &HardwareEOXBulletin{ProductId: &zeroValue}
	h.GetProductId()
	h = &HardwareEOXBulletin{}
	h.GetProductId()
	h = nil
	h.GetProductId()
}

func TestListOptions_GetFilter(tt *testing.T) {
	var zeroValue string
	l := &ListOptions{Filter: &zeroValue}
	l.GetFilter()
	l = &ListOptions{}
	l.GetFilter()
	l = nil
	l.GetFilter()
}

func TestListOptions_GetMask(tt *testing.T) {
	var zeroValue string
	l := &ListOptions{Mask: &zeroValue}
	l.GetMask()
	l = &ListOptions{}
	l.GetMask()
	l = nil
	l.GetMask()
}

func TestListOptions_GetPage(tt *testing.T) {
	var zeroValue int
	l := &ListOptions{Page: &zeroValue}
	l.GetPage()
	l = &ListOptions{}
	l.GetPage()
	l = nil
	l.GetPage()
}

func TestListOptions_GetPerPage(tt *testing.T) {
	var zeroValue int
	l := &ListOptions{PerPage: &zeroValue}
	l.GetPerPage()
	l = &ListOptions{}
	l.GetPerPage()
	l = nil
	l.GetPerPage()
}

func TestOrderablePid_GetItemDescription(tt *testing.T) {
	var zeroValue string
	o := &OrderablePid{ItemDescription: &zeroValue}
	o.GetItemDescription()
	o = &OrderablePid{}
	o.GetItemDescription()
	o = nil
	o.GetItemDescription()
}

func TestOrderablePid_GetItemPosition(tt *testing.T) {
	var zeroValue string
	o := &OrderablePid{ItemPosition: &zeroValue}
	o.GetItemPosition()
	o = &OrderablePid{}
	o.GetItemPosition()
	o = nil
	o.GetItemPosition()
}

func TestOrderablePid_GetItemType(tt *testing.T) {
	var zeroValue string
	o := &OrderablePid{ItemType: &zeroValue}
	o.GetItemType()
	o = &OrderablePid{}
	o.GetItemType()
	o = nil
	o.GetItemType()
}

func TestOrderablePid_GetOrderablePid(tt *testing.T) {
	var zeroValue string
	o := &OrderablePid{OrderablePid: &zeroValue}
	o.GetOrderablePid()
	o = &OrderablePid{}
	o.GetOrderablePid()
	o = nil
	o.GetOrderablePid()
}

func TestOrderablePid_GetPillarCode(tt *testing.T) {
	var zeroValue string
	o := &OrderablePid{PillarCode: &zeroValue}
	o.GetPillarCode()
	o = &OrderablePid{}
	o.GetPillarCode()
	o = nil
	o.GetPillarCode()
}

func TestRiskMitigationDetails_GetDeviceId(tt *testing.T) {
	var zeroValue int
	r := &RiskMitigationDetails{DeviceId: &zeroValue}
	r.GetDeviceId()
	r = &RiskMitigationDetails{}
	r.GetDeviceId()
	r = nil
	r.GetDeviceId()
}

func TestRiskMitigationDetails_GetDeviceIp(tt *testing.T) {
	var zeroValue string
	r := &RiskMitigationDetails{DeviceIp: &zeroValue}
	r.GetDeviceIp()
	r = &RiskMitigationDetails{}
	r.GetDeviceIp()
	r = nil
	r.GetDeviceIp()
}

func TestRiskMitigationDetails_GetDeviceName(tt *testing.T) {
	var zeroValue string
	r := &RiskMitigationDetails{DeviceName: &zeroValue}
	r.GetDeviceName()
	r = &RiskMitigationDetails{}
	r.GetDeviceName()
	r = nil
	r.GetDeviceName()
}

func TestRiskMitigationDetails_GetProductFamily(tt *testing.T) {
	var zeroValue string
	r := &RiskMitigationDetails{ProductFamily: &zeroValue}
	r.GetProductFamily()
	r = &RiskMitigationDetails{}
	r.GetProductFamily()
	r = nil
	r.GetProductFamily()
}

func TestRiskMitigationDetails_GetProductId(tt *testing.T) {
	var zeroValue string
	r := &RiskMitigationDetails{ProductId: &zeroValue}
	r.GetProductId()
	r = &RiskMitigationDetails{}
	r.GetProductId()
	r = nil
	r.GetProductId()
}

func TestRiskMitigationDetails_GetRiskCategory(tt *testing.T) {
	var zeroValue string
	r := &RiskMitigationDetails{RiskCategory: &zeroValue}
	r.GetRiskCategory()
	r = &RiskMitigationDetails{}
	r.GetRiskCategory()
	r = nil
	r.GetRiskCategory()
}

func TestRiskMitigationDetails_GetRiskScore(tt *testing.T) {
	var zeroValue float32
	r := &RiskMitigationDetails{RiskScore: &zeroValue}
	r.GetRiskScore()
	r = &RiskMitigationDetails{}
	r.GetRiskScore()
	r = nil
	r.GetRiskScore()
}

func TestRiskMitigationDetails_GetSwType(tt *testing.T) {
	var zeroValue string
	r := &RiskMitigationDetails{SwType: &zeroValue}
	r.GetSwType()
	r = &RiskMitigationDetails{}
	r.GetSwType()
	r = nil
	r.GetSwType()
}

func TestRiskMitigationDetails_GetSwVersion(tt *testing.T) {
	var zeroValue string
	r := &RiskMitigationDetails{SwVersion: &zeroValue}
	r.GetSwVersion()
	r = &RiskMitigationDetails{}
	r.GetSwVersion()
	r = nil
	r.GetSwVersion()
}

func TestRiskMitigationSummary_GetHighRiskDeviceCount(tt *testing.T) {
	var zeroValue int
	r := &RiskMitigationSummary{HighRiskDeviceCount: &zeroValue}
	r.GetHighRiskDeviceCount()
	r = &RiskMitigationSummary{}
	r.GetHighRiskDeviceCount()
	r = nil
	r.GetHighRiskDeviceCount()
}

func TestRiskMitigationSummary_GetLowRiskDeviceCount(tt *testing.T) {
	var zeroValue int
	r := &RiskMitigationSummary{LowRiskDeviceCount: &zeroValue}
	r.GetLowRiskDeviceCount()
	r = &RiskMitigationSummary{}
	r.GetLowRiskDeviceCount()
	r = nil
	r.GetLowRiskDeviceCount()
}

func TestRiskMitigationSummary_GetMediumRiskDeviceCount(tt *testing.T) {
	var zeroValue int
	r := &RiskMitigationSummary{MediumRiskDeviceCount: &zeroValue}
	r.GetMediumRiskDeviceCount()
	r = &RiskMitigationSummary{}
	r.GetMediumRiskDeviceCount()
	r = nil
	r.GetMediumRiskDeviceCount()
}

func TestRiskMitigationSummary_GetProductFamily(tt *testing.T) {
	var zeroValue string
	r := &RiskMitigationSummary{ProductFamily: &zeroValue}
	r.GetProductFamily()
	r = &RiskMitigationSummary{}
	r.GetProductFamily()
	r = nil
	r.GetProductFamily()
}

func TestSecurityAdvisory_GetDeviceId(tt *testing.T) {
	var zeroValue int
	s := &SecurityAdvisory{DeviceId: &zeroValue}
	s.GetDeviceId()
	s = &SecurityAdvisory{}
	s.GetDeviceId()
	s = nil
	s.GetDeviceId()
}

func TestSecurityAdvisory_GetMatchConfidence(tt *testing.T) {
	var zeroValue string
	s := &SecurityAdvisory{MatchConfidence: &zeroValue}
	s.GetMatchConfidence()
	s = &SecurityAdvisory{}
	s.GetMatchConfidence()
	s = nil
	s.GetMatchConfidence()
}

func TestSecurityAdvisory_GetMatchConfidenceReason(tt *testing.T) {
	var zeroValue string
	s := &SecurityAdvisory{MatchConfidenceReason: &zeroValue}
	s.GetMatchConfidenceReason()
	s = &SecurityAdvisory{}
	s.GetMatchConfidenceReason()
	s = nil
	s.GetMatchConfidenceReason()
}

func TestSecurityAdvisory_GetPsirtColdId(tt *testing.T) {
	var zeroValue int
	s := &SecurityAdvisory{PsirtColdId: &zeroValue}
	s.GetPsirtColdId()
	s = &SecurityAdvisory{}
	s.GetPsirtColdId()
	s = nil
	s.GetPsirtColdId()
}

func TestSecurityAdvisoryBulletin_GetBulletinFirstPublished(tt *testing.T) {
	var zeroValue string
	s := &SecurityAdvisoryBulletin{BulletinFirstPublished: &zeroValue}
	s.GetBulletinFirstPublished()
	s = &SecurityAdvisoryBulletin{}
	s.GetBulletinFirstPublished()
	s = nil
	s.GetBulletinFirstPublished()
}

func TestSecurityAdvisoryBulletin_GetBulletinLastUpdated(tt *testing.T) {
	s := &SecurityAdvisoryBulletin{}
	s.GetBulletinLastUpdated()
	s = nil
	s.GetBulletinLastUpdated()
}

func TestSecurityAdvisoryBulletin_GetBulletinMappingCaveat(tt *testing.T) {
	var zeroValue string
	s := &SecurityAdvisoryBulletin{BulletinMappingCaveat: &zeroValue}
	s.GetBulletinMappingCaveat()
	s = &SecurityAdvisoryBulletin{}
	s.GetBulletinMappingCaveat()
	s = nil
	s.GetBulletinMappingCaveat()
}

func TestSecurityAdvisoryBulletin_GetBulletinSummary(tt *testing.T) {
	var zeroValue string
	s := &SecurityAdvisoryBulletin{BulletinSummary: &zeroValue}
	s.GetBulletinSummary()
	s = &SecurityAdvisoryBulletin{}
	s.GetBulletinSummary()
	s = nil
	s.GetBulletinSummary()
}

func TestSecurityAdvisoryBulletin_GetBulletinTitle(tt *testing.T) {
	var zeroValue string
	s := &SecurityAdvisoryBulletin{BulletinTitle: &zeroValue}
	s.GetBulletinTitle()
	s = &SecurityAdvisoryBulletin{}
	s.GetBulletinTitle()
	s = nil
	s.GetBulletinTitle()
}

func TestSecurityAdvisoryBulletin_GetBulletinUrl(tt *testing.T) {
	var zeroValue string
	s := &SecurityAdvisoryBulletin{BulletinUrl: &zeroValue}
	s.GetBulletinUrl()
	s = &SecurityAdvisoryBulletin{}
	s.GetBulletinUrl()
	s = nil
	s.GetBulletinUrl()
}

func TestSecurityAdvisoryBulletin_GetBulletinVersion(tt *testing.T) {
	var zeroValue string
	s := &SecurityAdvisoryBulletin{BulletinVersion: &zeroValue}
	s.GetBulletinVersion()
	s = &SecurityAdvisoryBulletin{}
	s.GetBulletinVersion()
	s = nil
	s.GetBulletinVersion()
}

func TestSecurityAdvisoryBulletin_GetCiscoBugIds(tt *testing.T) {
	var zeroValue string
	s := &SecurityAdvisoryBulletin{CiscoBugIds: &zeroValue}
	s.GetCiscoBugIds()
	s = &SecurityAdvisoryBulletin{}
	s.GetCiscoBugIds()
	s = nil
	s.GetCiscoBugIds()
}

func TestSecurityAdvisoryBulletin_GetCveId(tt *testing.T) {
	var zeroValue string
	s := &SecurityAdvisoryBulletin{CveId: &zeroValue}
	s.GetCveId()
	s = &SecurityAdvisoryBulletin{}
	s.GetCveId()
	s = nil
	s.GetCveId()
}

func TestSecurityAdvisoryBulletin_GetCvssBase(tt *testing.T) {
	var zeroValue string
	s := &SecurityAdvisoryBulletin{CvssBase: &zeroValue}
	s.GetCvssBase()
	s = &SecurityAdvisoryBulletin{}
	s.GetCvssBase()
	s = nil
	s.GetCvssBase()
}

func TestSecurityAdvisoryBulletin_GetCvssTemporal(tt *testing.T) {
	var zeroValue string
	s := &SecurityAdvisoryBulletin{CvssTemporal: &zeroValue}
	s.GetCvssTemporal()
	s = &SecurityAdvisoryBulletin{}
	s.GetCvssTemporal()
	s = nil
	s.GetCvssTemporal()
}

func TestSecurityAdvisoryBulletin_GetPsirtAdvisoryId(tt *testing.T) {
	var zeroValue string
	s := &SecurityAdvisoryBulletin{PsirtAdvisoryId: &zeroValue}
	s.GetPsirtAdvisoryId()
	s = &SecurityAdvisoryBulletin{}
	s.GetPsirtAdvisoryId()
	s = nil
	s.GetPsirtAdvisoryId()
}

func TestSecurityAdvisoryBulletin_GetPsirtColdId(tt *testing.T) {
	var zeroValue int
	s := &SecurityAdvisoryBulletin{PsirtColdId: &zeroValue}
	s.GetPsirtColdId()
	s = &SecurityAdvisoryBulletin{}
	s.GetPsirtColdId()
	s = nil
	s.GetPsirtColdId()
}

func TestSecurityAdvisoryBulletin_GetSir(tt *testing.T) {
	var zeroValue string
	s := &SecurityAdvisoryBulletin{Sir: &zeroValue}
	s.GetSir()
	s = &SecurityAdvisoryBulletin{}
	s.GetSir()
	s = nil
	s.GetSir()
}

func TestSerialNumberDetails_GetBasePidList(tt *testing.T) {
	var zeroValue []ContractBasePID
	s := &SerialNumberDetails{BasePidList: &zeroValue}
	s.GetBasePidList()
	s = &SerialNumberDetails{}
	s.GetBasePidList()
	s = nil
	s.GetBasePidList()
}

func TestSerialNumberDetails_GetContractSiteAddress1(tt *testing.T) {
	var zeroValue string
	s := &SerialNumberDetails{ContractSiteAddress1: &zeroValue}
	s.GetContractSiteAddress1()
	s = &SerialNumberDetails{}
	s.GetContractSiteAddress1()
	s = nil
	s.GetContractSiteAddress1()
}

func TestSerialNumberDetails_GetContractSiteCity(tt *testing.T) {
	var zeroValue string
	s := &SerialNumberDetails{ContractSiteCity: &zeroValue}
	s.GetContractSiteCity()
	s = &SerialNumberDetails{}
	s.GetContractSiteCity()
	s = nil
	s.GetContractSiteCity()
}

func TestSerialNumberDetails_GetContractSiteCountry(tt *testing.T) {
	var zeroValue string
	s := &SerialNumberDetails{ContractSiteCountry: &zeroValue}
	s.GetContractSiteCountry()
	s = &SerialNumberDetails{}
	s.GetContractSiteCountry()
	s = nil
	s.GetContractSiteCountry()
}

func TestSerialNumberDetails_GetContractSiteCustomerName(tt *testing.T) {
	var zeroValue string
	s := &SerialNumberDetails{ContractSiteCustomerName: &zeroValue}
	s.GetContractSiteCustomerName()
	s = &SerialNumberDetails{}
	s.GetContractSiteCustomerName()
	s = nil
	s.GetContractSiteCustomerName()
}

func TestSerialNumberDetails_GetContractSiteStateProvince(tt *testing.T) {
	var zeroValue string
	s := &SerialNumberDetails{ContractSiteStateProvince: &zeroValue}
	s.GetContractSiteStateProvince()
	s = &SerialNumberDetails{}
	s.GetContractSiteStateProvince()
	s = nil
	s.GetContractSiteStateProvince()
}

func TestSerialNumberDetails_GetCoveredProductLineEndDate(tt *testing.T) {
	s := &SerialNumberDetails{}
	s.GetCoveredProductLineEndDate()
	s = nil
	s.GetCoveredProductLineEndDate()
}

func TestSerialNumberDetails_GetId(tt *testing.T) {
	var zeroValue int
	s := &SerialNumberDetails{Id: &zeroValue}
	s.GetId()
	s = &SerialNumberDetails{}
	s.GetId()
	s = nil
	s.GetId()
}

func TestSerialNumberDetails_GetIsCovered(tt *testing.T) {
	var zeroValue string
	s := &SerialNumberDetails{IsCovered: &zeroValue}
	s.GetIsCovered()
	s = &SerialNumberDetails{}
	s.GetIsCovered()
	s = nil
	s.GetIsCovered()
}

func TestSerialNumberDetails_GetOrderablePidList(tt *testing.T) {
	var zeroValue []OrderablePid
	s := &SerialNumberDetails{OrderablePidList: &zeroValue}
	s.GetOrderablePidList()
	s = &SerialNumberDetails{}
	s.GetOrderablePidList()
	s = nil
	s.GetOrderablePidList()
}

func TestSerialNumberDetails_GetParentSrNo(tt *testing.T) {
	var zeroValue string
	s := &SerialNumberDetails{ParentSrNo: &zeroValue}
	s.GetParentSrNo()
	s = &SerialNumberDetails{}
	s.GetParentSrNo()
	s = nil
	s.GetParentSrNo()
}

func TestSerialNumberDetails_GetServiceContractNumber(tt *testing.T) {
	var zeroValue string
	s := &SerialNumberDetails{ServiceContractNumber: &zeroValue}
	s.GetServiceContractNumber()
	s = &SerialNumberDetails{}
	s.GetServiceContractNumber()
	s = nil
	s.GetServiceContractNumber()
}

func TestSerialNumberDetails_GetServiceLineDescr(tt *testing.T) {
	var zeroValue string
	s := &SerialNumberDetails{ServiceLineDescr: &zeroValue}
	s.GetServiceLineDescr()
	s = &SerialNumberDetails{}
	s.GetServiceLineDescr()
	s = nil
	s.GetServiceLineDescr()
}

func TestSerialNumberDetails_GetSrNo(tt *testing.T) {
	var zeroValue string
	s := &SerialNumberDetails{SrNo: &zeroValue}
	s.GetSrNo()
	s = &SerialNumberDetails{}
	s.GetSrNo()
	s = nil
	s.GetSrNo()
}

func TestSerialNumberDetails_GetWarrantyEndDate(tt *testing.T) {
	s := &SerialNumberDetails{}
	s.GetWarrantyEndDate()
	s = nil
	s.GetWarrantyEndDate()
}

func TestSerialNumberDetails_GetWarrantyType(tt *testing.T) {
	var zeroValue string
	s := &SerialNumberDetails{WarrantyType: &zeroValue}
	s.GetWarrantyType()
	s = &SerialNumberDetails{}
	s.GetWarrantyType()
	s = nil
	s.GetWarrantyType()
}

func TestSerialNumberDetails_GetWarrantyTypeDescription(tt *testing.T) {
	var zeroValue string
	s := &SerialNumberDetails{WarrantyTypeDescription: &zeroValue}
	s.GetWarrantyTypeDescription()
	s = &SerialNumberDetails{}
	s.GetWarrantyTypeDescription()
	s = nil
	s.GetWarrantyTypeDescription()
}

func TestSoftwareAlert_GetDeviceId(tt *testing.T) {
	var zeroValue int
	s := &SoftwareAlert{DeviceId: &zeroValue}
	s.GetDeviceId()
	s = &SoftwareAlert{}
	s.GetDeviceId()
	s = nil
	s.GetDeviceId()
}

func TestSoftwareAlert_GetDeviceName(tt *testing.T) {
	var zeroValue string
	s := &SoftwareAlert{DeviceName: &zeroValue}
	s.GetDeviceName()
	s = &SoftwareAlert{}
	s.GetDeviceName()
	s = nil
	s.GetDeviceName()
}

func TestSoftwareAlert_GetImageName(tt *testing.T) {
	var zeroValue string
	s := &SoftwareAlert{ImageName: &zeroValue}
	s.GetImageName()
	s = &SoftwareAlert{}
	s.GetImageName()
	s = nil
	s.GetImageName()
}

func TestSoftwareAlert_GetSwAlertType(tt *testing.T) {
	var zeroValue string
	s := &SoftwareAlert{SwAlertType: &zeroValue}
	s.GetSwAlertType()
	s = &SoftwareAlert{}
	s.GetSwAlertType()
	s = nil
	s.GetSwAlertType()
}

func TestSoftwareAlert_GetSwAlertUrl(tt *testing.T) {
	var zeroValue string
	s := &SoftwareAlert{SwAlertUrl: &zeroValue}
	s.GetSwAlertUrl()
	s = &SoftwareAlert{}
	s.GetSwAlertUrl()
	s = nil
	s.GetSwAlertUrl()
}

func TestSoftwareAlert_GetSwType(tt *testing.T) {
	var zeroValue string
	s := &SoftwareAlert{SwType: &zeroValue}
	s.GetSwType()
	s = &SoftwareAlert{}
	s.GetSwType()
	s = nil
	s.GetSwType()
}

func TestSoftwareAlert_GetSwVersion(tt *testing.T) {
	var zeroValue string
	s := &SoftwareAlert{SwVersion: &zeroValue}
	s.GetSwVersion()
	s = &SoftwareAlert{}
	s.GetSwVersion()
	s = nil
	s.GetSwVersion()
}

func TestSoftwareEOX_GetCurrentEoxMilestone(tt *testing.T) {
	var zeroValue string
	s := &SoftwareEOX{CurrentEoxMilestone: &zeroValue}
	s.GetCurrentEoxMilestone()
	s = &SoftwareEOX{}
	s.GetCurrentEoxMilestone()
	s = nil
	s.GetCurrentEoxMilestone()
}

func TestSoftwareEOX_GetCurrentEoxMilestoneDate(tt *testing.T) {
	s := &SoftwareEOX{}
	s.GetCurrentEoxMilestoneDate()
	s = nil
	s.GetCurrentEoxMilestoneDate()
}

func TestSoftwareEOX_GetDeviceId(tt *testing.T) {
	var zeroValue int
	s := &SoftwareEOX{DeviceId: &zeroValue}
	s.GetDeviceId()
	s = &SoftwareEOX{}
	s.GetDeviceId()
	s = nil
	s.GetDeviceId()
}

func TestSoftwareEOX_GetDeviceName(tt *testing.T) {
	var zeroValue string
	s := &SoftwareEOX{DeviceName: &zeroValue}
	s.GetDeviceName()
	s = &SoftwareEOX{}
	s.GetDeviceName()
	s = nil
	s.GetDeviceName()
}

func TestSoftwareEOX_GetNextEoxMilestone(tt *testing.T) {
	var zeroValue string
	s := &SoftwareEOX{NextEoxMilestone: &zeroValue}
	s.GetNextEoxMilestone()
	s = &SoftwareEOX{}
	s.GetNextEoxMilestone()
	s = nil
	s.GetNextEoxMilestone()
}

func TestSoftwareEOX_GetNextEoxMilestoneDate(tt *testing.T) {
	s := &SoftwareEOX{}
	s.GetNextEoxMilestoneDate()
	s = nil
	s.GetNextEoxMilestoneDate()
}

func TestSoftwareEOX_GetSwEoxId(tt *testing.T) {
	var zeroValue int
	s := &SoftwareEOX{SwEoxId: &zeroValue}
	s.GetSwEoxId()
	s = &SoftwareEOX{}
	s.GetSwEoxId()
	s = nil
	s.GetSwEoxId()
}

func TestSoftwareEOX_GetSwType(tt *testing.T) {
	var zeroValue string
	s := &SoftwareEOX{SwType: &zeroValue}
	s.GetSwType()
	s = &SoftwareEOX{}
	s.GetSwType()
	s = nil
	s.GetSwType()
}

func TestSoftwareEOX_GetSwVersion(tt *testing.T) {
	var zeroValue string
	s := &SoftwareEOX{SwVersion: &zeroValue}
	s.GetSwVersion()
	s = &SoftwareEOX{}
	s.GetSwVersion()
	s = nil
	s.GetSwVersion()
}

func TestSoftwareEOXBulletin_GetBulletinNumber(tt *testing.T) {
	var zeroValue string
	s := &SoftwareEOXBulletin{BulletinNumber: &zeroValue}
	s.GetBulletinNumber()
	s = &SoftwareEOXBulletin{}
	s.GetBulletinNumber()
	s = nil
	s.GetBulletinNumber()
}

func TestSoftwareEOXBulletin_GetBulletinTitle(tt *testing.T) {
	var zeroValue string
	s := &SoftwareEOXBulletin{BulletinTitle: &zeroValue}
	s.GetBulletinTitle()
	s = &SoftwareEOXBulletin{}
	s.GetBulletinTitle()
	s = nil
	s.GetBulletinTitle()
}

func TestSoftwareEOXBulletin_GetBulletinUrl(tt *testing.T) {
	var zeroValue string
	s := &SoftwareEOXBulletin{BulletinUrl: &zeroValue}
	s.GetBulletinUrl()
	s = &SoftwareEOXBulletin{}
	s.GetBulletinUrl()
	s = nil
	s.GetBulletinUrl()
}

func TestSoftwareEOXBulletin_GetEoLifeAnnouncementDate(tt *testing.T) {
	s := &SoftwareEOXBulletin{}
	s.GetEoLifeAnnouncementDate()
	s = nil
	s.GetEoLifeAnnouncementDate()
}

func TestSoftwareEOXBulletin_GetEoSaleDate(tt *testing.T) {
	s := &SoftwareEOXBulletin{}
	s.GetEoSaleDate()
	s = nil
	s.GetEoSaleDate()
}

func TestSoftwareEOXBulletin_GetEoSecurityVulSupportDate(tt *testing.T) {
	s := &SoftwareEOXBulletin{}
	s.GetEoSecurityVulSupportDate()
	s = nil
	s.GetEoSecurityVulSupportDate()
}

func TestSoftwareEOXBulletin_GetEoSwMaintenanceReleasesDate(tt *testing.T) {
	s := &SoftwareEOXBulletin{}
	s.GetEoSwMaintenanceReleasesDate()
	s = nil
	s.GetEoSwMaintenanceReleasesDate()
}

func TestSoftwareEOXBulletin_GetLastDateOfSupport(tt *testing.T) {
	s := &SoftwareEOXBulletin{}
	s.GetLastDateOfSupport()
	s = nil
	s.GetLastDateOfSupport()
}

func TestSoftwareEOXBulletin_GetSwEoxId(tt *testing.T) {
	var zeroValue int
	s := &SoftwareEOXBulletin{SwEoxId: &zeroValue}
	s.GetSwEoxId()
	s = &SoftwareEOXBulletin{}
	s.GetSwEoxId()
	s = nil
	s.GetSwEoxId()
}

func TestSoftwareEOXBulletin_GetSwMaintenanceVersion(tt *testing.T) {
	var zeroValue string
	s := &SoftwareEOXBulletin{SwMaintenanceVersion: &zeroValue}
	s.GetSwMaintenanceVersion()
	s = &SoftwareEOXBulletin{}
	s.GetSwMaintenanceVersion()
	s = nil
	s.GetSwMaintenanceVersion()
}

func TestSoftwareEOXBulletin_GetSwMajorVersion(tt *testing.T) {
	var zeroValue string
	s := &SoftwareEOXBulletin{SwMajorVersion: &zeroValue}
	s.GetSwMajorVersion()
	s = &SoftwareEOXBulletin{}
	s.GetSwMajorVersion()
	s = nil
	s.GetSwMajorVersion()
}

func TestSoftwareEOXBulletin_GetSwTrain(tt *testing.T) {
	var zeroValue string
	s := &SoftwareEOXBulletin{SwTrain: &zeroValue}
	s.GetSwTrain()
	s = &SoftwareEOXBulletin{}
	s.GetSwTrain()
	s = nil
	s.GetSwTrain()
}

func TestSoftwareEOXBulletin_GetSwType(tt *testing.T) {
	var zeroValue string
	s := &SoftwareEOXBulletin{SwType: &zeroValue}
	s.GetSwType()
	s = &SoftwareEOXBulletin{}
	s.GetSwType()
	s = nil
	s.GetSwType()
}

func TestSyslogDaily_GetDate(tt *testing.T) {
	s := &SyslogDaily{}
	s.GetDate()
	s = nil
	s.GetDate()
}

func TestSyslogDaily_GetDescription(tt *testing.T) {
	var zeroValue string
	s := &SyslogDaily{Description: &zeroValue}
	s.GetDescription()
	s = &SyslogDaily{}
	s.GetDescription()
	s = nil
	s.GetDescription()
}

func TestSyslogDaily_GetIcseverity(tt *testing.T) {
	var zeroValue string
	s := &SyslogDaily{Icseverity: &zeroValue}
	s.GetIcseverity()
	s = &SyslogDaily{}
	s.GetIcseverity()
	s = nil
	s.GetIcseverity()
}

func TestSyslogDaily_GetMsgtype(tt *testing.T) {
	var zeroValue string
	s := &SyslogDaily{Msgtype: &zeroValue}
	s.GetMsgtype()
	s = &SyslogDaily{}
	s.GetMsgtype()
	s = nil
	s.GetMsgtype()
}

func TestSyslogDaily_GetRecommendation(tt *testing.T) {
	var zeroValue string
	s := &SyslogDaily{Recommendation: &zeroValue}
	s.GetRecommendation()
	s = &SyslogDaily{}
	s.GetRecommendation()
	s = nil
	s.GetRecommendation()
}

func TestSyslogDaily_GetSeverity(tt *testing.T) {
	var zeroValue int
	s := &SyslogDaily{Severity: &zeroValue}
	s.GetSeverity()
	s = &SyslogDaily{}
	s.GetSeverity()
	s = nil
	s.GetSeverity()
}

func TestSyslogDaily_GetTimestamp(tt *testing.T) {
	s := &SyslogDaily{}
	s.GetTimestamp()
	s = nil
	s.GetTimestamp()
}

func TestSyslogDaily_GetTotal(tt *testing.T) {
	var zeroValue int
	s := &SyslogDaily{Total: &zeroValue}
	s.GetTotal()
	s = &SyslogDaily{}
	s.GetTotal()
	s = nil
	s.GetTotal()
}

func TestSyslogDevice_GetDevice(tt *testing.T) {
	var zeroValue string
	s := &SyslogDevice{Device: &zeroValue}
	s.GetDevice()
	s = &SyslogDevice{}
	s.GetDevice()
	s = nil
	s.GetDevice()
}

func TestSyslogDevice_GetDeviceId(tt *testing.T) {
	var zeroValue int
	s := &SyslogDevice{DeviceId: &zeroValue}
	s.GetDeviceId()
	s = &SyslogDevice{}
	s.GetDeviceId()
	s = nil
	s.GetDeviceId()
}

func TestSyslogDevice_GetEvents(tt *testing.T) {
	var zeroValue int
	s := &SyslogDevice{Events: &zeroValue}
	s.GetEvents()
	s = &SyslogDevice{}
	s.GetEvents()
	s = nil
	s.GetEvents()
}
